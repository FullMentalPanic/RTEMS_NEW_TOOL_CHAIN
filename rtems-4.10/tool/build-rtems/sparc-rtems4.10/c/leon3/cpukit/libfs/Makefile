# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libfs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = ../../../../../../rtems-4.10/c/src/../../cpukit/libfs
pkgdatadir = $(datadir)/rtems-cpukit
pkgincludedir = $(includedir)/rtems-cpukit
pkglibdir = $(libdir)/rtems-cpukit
pkglibexecdir = $(libexecdir)/rtems-cpukit
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = sparc-unknown-rtems4.10
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/preinstall.am $(top_srcdir)/automake/compile.am \
	$(top_srcdir)/automake/local.am \
	$(top_srcdir)/automake/multilib.am

# dosfs
am__append_1 = libdosfs.a
subdir = libfs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/canonical-target-name.m4 \
	$(top_srcdir)/aclocal/canonicalize-tools.m4 \
	$(top_srcdir)/aclocal/check-itron.m4 \
	$(top_srcdir)/aclocal/check-multiprocessing.m4 \
	$(top_srcdir)/aclocal/check-networking.m4 \
	$(top_srcdir)/aclocal/check-newlib.m4 \
	$(top_srcdir)/aclocal/check-posix.m4 \
	$(top_srcdir)/aclocal/check-rtems-debug.m4 \
	$(top_srcdir)/aclocal/check-tool.m4 \
	$(top_srcdir)/aclocal/enable-drvmgr.m4 \
	$(top_srcdir)/aclocal/enable-httpd.m4 \
	$(top_srcdir)/aclocal/enable-itron.m4 \
	$(top_srcdir)/aclocal/enable-multiprocessing.m4 \
	$(top_srcdir)/aclocal/enable-networking.m4 \
	$(top_srcdir)/aclocal/enable-posix.m4 \
	$(top_srcdir)/aclocal/enable-rtems-debug.m4 \
	$(top_srcdir)/aclocal/enable-shttpd.m4 \
	$(top_srcdir)/aclocal/env-rtemscpu.m4 \
	$(top_srcdir)/aclocal/gcc-pipe.m4 \
	$(top_srcdir)/aclocal/gcc-sanity.m4 \
	$(top_srcdir)/aclocal/gcc-weak.m4 \
	$(top_srcdir)/aclocal/multi.m4 \
	$(top_srcdir)/aclocal/multilib.m4 \
	$(top_srcdir)/aclocal/prog-cc.m4 \
	$(top_srcdir)/aclocal/prog-ccas.m4 \
	$(top_srcdir)/aclocal/rtems-ampolish.m4 \
	$(top_srcdir)/aclocal/rtems-top.m4 \
	$(top_srcdir)/aclocal/version.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libdosfs_a_AR = $(AR) $(ARFLAGS)
libdosfs_a_LIBADD =
am__libdosfs_a_SOURCES_DIST = src/dosfs/fat.c src/dosfs/fat.h \
	src/dosfs/fat_fat_operations.c src/dosfs/fat_fat_operations.h \
	src/dosfs/fat_file.c src/dosfs/fat_file.h \
	src/dosfs/msdos_create.c src/dosfs/msdos_dir.c \
	src/dosfs/msdos_eval.c src/dosfs/msdos_file.c \
	src/dosfs/msdos_free.c src/dosfs/msdos_fsunmount.c \
	src/dosfs/msdos_handlers_dir.c src/dosfs/msdos_handlers_file.c \
	src/dosfs/msdos_init.c src/dosfs/msdos_initsupp.c \
	src/dosfs/msdos_misc.c src/dosfs/msdos_mknod.c \
	src/dosfs/msdos_node_type.c src/dosfs/msdos_conv.c \
	src/dosfs/msdos.h src/dosfs/msdos_format.c src/dosfs/dosfs.h \
	src/dosfs/msdos_rename.c
am__dirstamp = $(am__leading_dot)dirstamp
am_libdosfs_a_OBJECTS = src/dosfs/fat.$(OBJEXT) \
	src/dosfs/fat_fat_operations.$(OBJEXT) \
	src/dosfs/fat_file.$(OBJEXT) \
	src/dosfs/msdos_create.$(OBJEXT) \
	src/dosfs/msdos_dir.$(OBJEXT) \
	src/dosfs/msdos_eval.$(OBJEXT) \
	src/dosfs/msdos_file.$(OBJEXT) \
	src/dosfs/msdos_free.$(OBJEXT) \
	src/dosfs/msdos_fsunmount.$(OBJEXT) \
	src/dosfs/msdos_handlers_dir.$(OBJEXT) \
	src/dosfs/msdos_handlers_file.$(OBJEXT) \
	src/dosfs/msdos_init.$(OBJEXT) \
	src/dosfs/msdos_initsupp.$(OBJEXT) \
	src/dosfs/msdos_misc.$(OBJEXT) \
	src/dosfs/msdos_mknod.$(OBJEXT) \
	src/dosfs/msdos_node_type.$(OBJEXT) \
	src/dosfs/msdos_conv.$(OBJEXT) \
	src/dosfs/msdos_format.$(OBJEXT) \
	src/dosfs/msdos_rename.$(OBJEXT)
libdosfs_a_OBJECTS = $(am_libdosfs_a_OBJECTS)
libimfs_a_AR = $(AR) $(ARFLAGS)
libimfs_a_LIBADD =
am_libimfs_a_OBJECTS = src/imfs/imfs_chown.$(OBJEXT) \
	src/imfs/imfs_config.$(OBJEXT) src/imfs/imfs_creat.$(OBJEXT) \
	src/imfs/imfs_directory.$(OBJEXT) src/imfs/imfs_eval.$(OBJEXT) \
	src/imfs/imfs_free.$(OBJEXT) src/imfs/imfs_fsunmount.$(OBJEXT) \
	src/imfs/imfs_gtkn.$(OBJEXT) src/imfs/imfs_init.$(OBJEXT) \
	src/imfs/imfs_initsupp.$(OBJEXT) src/imfs/imfs_link.$(OBJEXT) \
	src/imfs/imfs_mknod.$(OBJEXT) src/imfs/imfs_mount.$(OBJEXT) \
	src/imfs/imfs_fchmod.$(OBJEXT) src/imfs/imfs_unlink.$(OBJEXT) \
	src/imfs/imfs_unmount.$(OBJEXT) src/imfs/imfs_utime.$(OBJEXT) \
	src/imfs/imfs_ntype.$(OBJEXT) src/imfs/imfs_stat.$(OBJEXT) \
	src/imfs/imfs_getchild.$(OBJEXT) src/imfs/memfile.$(OBJEXT) \
	src/imfs/imfs_fifo.$(OBJEXT) src/imfs/deviceio.$(OBJEXT) \
	src/imfs/imfs_handlers_device.$(OBJEXT) \
	src/imfs/imfs_handlers_directory.$(OBJEXT) \
	src/imfs/imfs_handlers_link.$(OBJEXT) \
	src/imfs/imfs_handlers_memfile.$(OBJEXT) \
	src/imfs/imfs_debug.$(OBJEXT) src/imfs/imfs_rmnod.$(OBJEXT) \
	src/imfs/imfs_symlink.$(OBJEXT) \
	src/imfs/imfs_readlink.$(OBJEXT) \
	src/imfs/imfs_fdatasync.$(OBJEXT) \
	src/imfs/imfs_fcntl.$(OBJEXT) src/imfs/ioman.$(OBJEXT) \
	src/imfs/miniimfs_init.$(OBJEXT) \
	src/imfs/imfs_load_tar.$(OBJEXT) \
	src/imfs/imfs_rename.$(OBJEXT) src/imfs/deviceerrno.$(OBJEXT) \
	src/devfs/devfs_init.$(OBJEXT) src/devfs/devfs_eval.$(OBJEXT) \
	src/devfs/devfs_mknod.$(OBJEXT) src/devfs/devfs_show.$(OBJEXT) \
	src/devfs/devfs_node_type.$(OBJEXT) \
	src/devfs/devopen.$(OBJEXT) src/devfs/devread.$(OBJEXT) \
	src/devfs/devwrite.$(OBJEXT) src/devfs/devclose.$(OBJEXT) \
	src/devfs/devioctl.$(OBJEXT) src/devfs/devstat.$(OBJEXT) \
	src/pipe/fifo.$(OBJEXT) src/pipe/pipe.$(OBJEXT)
libimfs_a_OBJECTS = $(am_libimfs_a_OBJECTS)
librfs_a_AR = $(AR) $(ARFLAGS)
librfs_a_LIBADD =
am_librfs_a_OBJECTS = src/rfs/rtems-rfs-bitmaps.$(OBJEXT) \
	src/rfs/rtems-rfs-block.$(OBJEXT) \
	src/rfs/rtems-rfs-buffer-bdbuf.$(OBJEXT) \
	src/rfs/rtems-rfs-buffer.$(OBJEXT) \
	src/rfs/rtems-rfs-dir-hash.$(OBJEXT) \
	src/rfs/rtems-rfs-file.$(OBJEXT) \
	src/rfs/rtems-rfs-group.$(OBJEXT) \
	src/rfs/rtems-rfs-inode.$(OBJEXT) \
	src/rfs/rtems-rfs-rtems-dev.$(OBJEXT) \
	src/rfs/rtems-rfs-rtems-utils.$(OBJEXT) \
	src/rfs/rtems-rfs-rtems.$(OBJEXT) \
	src/rfs/rtems-rfs-shell.$(OBJEXT) \
	src/rfs/rtems-rfs-bitmaps-ut.$(OBJEXT) \
	src/rfs/rtems-rfs-dir.$(OBJEXT) \
	src/rfs/rtems-rfs-file-system.$(OBJEXT) \
	src/rfs/rtems-rfs-format.$(OBJEXT) \
	src/rfs/rtems-rfs-link.$(OBJEXT) \
	src/rfs/rtems-rfs-mutex.$(OBJEXT) \
	src/rfs/rtems-rfs-rtems-dir.$(OBJEXT) \
	src/rfs/rtems-rfs-rtems-file.$(OBJEXT) \
	src/rfs/rtems-rfs-trace.$(OBJEXT)
librfs_a_OBJECTS = $(am_librfs_a_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdosfs_a_SOURCES) $(libimfs_a_SOURCES) \
	$(librfs_a_SOURCES)
DIST_SOURCES = $(am__libdosfs_a_SOURCES_DIST) $(libimfs_a_SOURCES) \
	$(librfs_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run aclocal-1.11
AMPOLISH3 = $(PERL) /opt/rtems-4.10/tool/rtems-4.10/ampolish3
AMTAR = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run tar
AR = sparc-rtems4.10-ar
AUTOCONF = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run automake-1.11
AWK = mawk
CC = sparc-rtems4.10-gcc --pipe
CCAS = sparc-rtems4.10-gcc --pipe
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -mcpu=cypress -msoft-float -O2 -g -Wall -Wimplicit-function-declaration -Wstrict-prototypes -Wnested-externs
CCDEPMODE = depmode=gcc3
CFLAGS = -mcpu=cypress -msoft-float -O2 -g -Wall -Wimplicit-function-declaration -Wstrict-prototypes -Wnested-externs
CPP = sparc-rtems4.10-gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAKE = make
MAKEINFO = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MULTIBUILDTOP = 
MULTISUBDIR = 
OBJEXT = o
PACKAGE = rtems-cpukit
PACKAGE_BUGREPORT = http://www.rtems.org/bugzilla
PACKAGE_NAME = rtems-cpukit
PACKAGE_STRING = rtems-cpukit 4.10.2
PACKAGE_TARNAME = rtems-cpukit
PACKAGE_URL = 
PACKAGE_VERSION = 4.10.2
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PROJECT_INCLUDE = $(top_builddir)/../$(MULTIBUILDTOP)cpukit/../../../leon3/lib/include
PROJECT_LIB = $(top_builddir)/../$(MULTIBUILDTOP)cpukit/../../../leon3/lib$(MULTISUBDIR)
RANLIB = sparc-rtems4.10-ranlib
RPCGEN = rpcgen
RTEMS_CCASFLAGS = -DASM $(CFLAGS)
RTEMS_CPPFLAGS = -I$(top_builddir) -I$(PROJECT_INCLUDE)
RTEMS_CPU = sparc
RTEMS_HAS_POSIX_API = yes
RTEMS_RELLDFLAGS = -qnolinkcmds -nostdlib -r
RTEMS_TOPdir = ..
RTEMS_USE_NEWLIB = yes
SET_MAKE = 
SHELL = /bin/bash
STRIP = sparc-rtems4.10-strip
VERSION = 4.10.2
abs_builddir = /opt/rtems-4.10/tool/build-rtems/sparc-rtems4.10/c/leon3/cpukit/libfs
abs_srcdir = /opt/rtems-4.10/tool/build-rtems/sparc-rtems4.10/c/leon3/cpukit/../../../../../rtems-4.10/c/src/../../cpukit/libfs
abs_top_builddir = /opt/rtems-4.10/tool/build-rtems/sparc-rtems4.10/c/leon3/cpukit
abs_top_srcdir = /opt/rtems-4.10/tool/build-rtems/sparc-rtems4.10/c/leon3/cpukit/../../../../../rtems-4.10/c/src/../../cpukit
ac_ct_CC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dirstamp = ${am__leading_dot}dirstamp
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /opt/rtems-4.10/sparc-rtems4.10
host = sparc-unknown-rtems4.10
host_alias = sparc-rtems4.10
host_cpu = sparc
host_os = rtems4.10
host_vendor = unknown
htmldir = ${docdir}
includedir = /opt/rtems-4.10/sparc-rtems4.10/leon3/lib/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /opt/rtems-4.10/tool/rtems-4.10/install-sh
libdir = /opt/rtems-4.10/sparc-rtems4.10/leon3/lib$(MULTISUBDIR)
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
multilib_basedir = ../../../../../rtems-4.10/c/src/../../cpukit/..
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/rtems-4.10
program_transform_name = s,x,x,
project_includedir = $(includedir)
project_libdir = $(libdir)
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../../../../rtems-4.10/c/src/../../cpukit/libfs
sysconfdir = ${prefix}/etc
target_alias = sparc-rtems4.10
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../../../../../../rtems-4.10/c/src/../../cpukit
#MULTISRCTOP = 
#MULTIDIRS = 
#MULTIDO = true
#MULTICLEAN = true
AM_CPPFLAGS = -I$(top_builddir) -I$(PROJECT_INCLUDE)
AM_CFLAGS = 
AM_CCASFLAGS = -DASM $(CFLAGS)

# Pick up nfsclient
NFSCLIENT_SUBDIR = src/nfsclient
SUBDIRS = $(NFSCLIENT_SUBDIR)
DIST_SUBDIRS = $(SUBDIRS)
EXTRA_DIST = README

# RFS
noinst_LIBRARIES = libimfs.a $(am__append_1) librfs.a

# POSIX FIFO/pipe
libimfs_a_SOURCES = src/imfs/imfs_chown.c src/imfs/imfs_config.c \
	src/imfs/imfs_creat.c src/imfs/imfs_directory.c \
	src/imfs/imfs_eval.c src/imfs/imfs_free.c \
	src/imfs/imfs_fsunmount.c src/imfs/imfs_gtkn.c \
	src/imfs/imfs_init.c src/imfs/imfs_initsupp.c \
	src/imfs/imfs_link.c src/imfs/imfs_mknod.c \
	src/imfs/imfs_mount.c src/imfs/imfs_fchmod.c \
	src/imfs/imfs_unlink.c src/imfs/imfs_unmount.c \
	src/imfs/imfs_utime.c src/imfs/imfs_ntype.c \
	src/imfs/imfs_stat.c src/imfs/imfs_getchild.c \
	src/imfs/memfile.c src/imfs/imfs_fifo.c src/imfs/deviceio.c \
	src/imfs/imfs_handlers_device.c \
	src/imfs/imfs_handlers_directory.c \
	src/imfs/imfs_handlers_link.c src/imfs/imfs_handlers_memfile.c \
	src/imfs/imfs_debug.c src/imfs/imfs_rmnod.c \
	src/imfs/imfs_symlink.c src/imfs/imfs_readlink.c \
	src/imfs/imfs_fdatasync.c src/imfs/imfs_fcntl.c \
	src/imfs/ioman.c src/imfs/miniimfs_init.c \
	src/imfs/imfs_load_tar.c src/imfs/imfs_rename.c \
	src/imfs/imfs.h src/imfs/deviceerrno.c src/devfs/devfs_init.c \
	src/devfs/devfs_eval.c src/devfs/devfs_mknod.c \
	src/devfs/devfs_show.c src/devfs/devfs_node_type.c \
	src/devfs/devopen.c src/devfs/devread.c src/devfs/devwrite.c \
	src/devfs/devclose.c src/devfs/devioctl.c src/devfs/devstat.c \
	src/devfs/devfs.h src/pipe/fifo.c src/pipe/pipe.c \
	src/pipe/pipe.h

# libdosfs_FATFS_C_FILES

# libdosfs_DOSFS_C_FILES
libdosfs_a_SOURCES = src/dosfs/fat.c src/dosfs/fat.h \
	src/dosfs/fat_fat_operations.c \
	src/dosfs/fat_fat_operations.h \
	src/dosfs/fat_file.c src/dosfs/fat_file.h \
	src/dosfs/msdos_create.c src/dosfs/msdos_dir.c \
	src/dosfs/msdos_eval.c src/dosfs/msdos_file.c \
	src/dosfs/msdos_free.c \
	src/dosfs/msdos_fsunmount.c \
	src/dosfs/msdos_handlers_dir.c \
	src/dosfs/msdos_handlers_file.c \
	src/dosfs/msdos_init.c \
	src/dosfs/msdos_initsupp.c \
	src/dosfs/msdos_misc.c src/dosfs/msdos_mknod.c \
	src/dosfs/msdos_node_type.c \
	src/dosfs/msdos_conv.c src/dosfs/msdos.h \
	src/dosfs/msdos_format.c src/dosfs/dosfs.h \
	src/dosfs/msdos_rename.c
librfs_a_SOURCES = \
    src/rfs/rtems-rfs-bitmaps.c src/rfs/rtems-rfs-block.c \
    src/rfs/rtems-rfs-buffer-bdbuf.c src/rfs/rtems-rfs-buffer.c \
    src/rfs/rtems-rfs-dir-hash.c src/rfs/rtems-rfs-file.c \
    src/rfs/rtems-rfs-group.c src/rfs/rtems-rfs-inode.c \
    src/rfs/rtems-rfs-rtems-dev.c src/rfs/rtems-rfs-rtems-utils.c \
    src/rfs/rtems-rfs-rtems.c src/rfs/rtems-rfs-shell.c \
    src/rfs/rtems-rfs-bitmaps-ut.c src/rfs/rtems-rfs-dir.c \
    src/rfs/rtems-rfs-file-system.c src/rfs/rtems-rfs-format.c \
    src/rfs/rtems-rfs-link.c src/rfs/rtems-rfs-mutex.c \
    src/rfs/rtems-rfs-rtems-dir.c src/rfs/rtems-rfs-rtems-file.c \
    src/rfs/rtems-rfs-trace.c

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/automake/multilib.am $(top_srcdir)/automake/compile.am $(srcdir)/preinstall.am $(top_srcdir)/automake/local.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libfs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libfs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
src/dosfs/$(am__dirstamp):
	@$(MKDIR_P) src/dosfs
	@: > src/dosfs/$(am__dirstamp)
src/dosfs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/dosfs/$(DEPDIR)
	@: > src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/fat.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/fat_fat_operations.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/fat_file.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_create.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_dir.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_eval.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_file.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_free.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_fsunmount.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_handlers_dir.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_handlers_file.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_init.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_initsupp.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_misc.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_mknod.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_node_type.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_conv.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_format.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
src/dosfs/msdos_rename.$(OBJEXT): src/dosfs/$(am__dirstamp) \
	src/dosfs/$(DEPDIR)/$(am__dirstamp)
libdosfs.a: $(libdosfs_a_OBJECTS) $(libdosfs_a_DEPENDENCIES) 
	-rm -f libdosfs.a
	$(libdosfs_a_AR) libdosfs.a $(libdosfs_a_OBJECTS) $(libdosfs_a_LIBADD)
	$(RANLIB) libdosfs.a
src/imfs/$(am__dirstamp):
	@$(MKDIR_P) src/imfs
	@: > src/imfs/$(am__dirstamp)
src/imfs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/imfs/$(DEPDIR)
	@: > src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_chown.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_config.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_creat.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_directory.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_eval.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_free.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_fsunmount.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_gtkn.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_init.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_initsupp.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_link.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_mknod.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_mount.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_fchmod.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_unlink.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_unmount.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_utime.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_ntype.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_stat.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_getchild.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/memfile.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_fifo.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/deviceio.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_handlers_device.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_handlers_directory.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_handlers_link.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_handlers_memfile.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_debug.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_rmnod.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_symlink.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_readlink.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_fdatasync.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_fcntl.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/ioman.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/miniimfs_init.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_load_tar.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/imfs_rename.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/imfs/deviceerrno.$(OBJEXT): src/imfs/$(am__dirstamp) \
	src/imfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/$(am__dirstamp):
	@$(MKDIR_P) src/devfs
	@: > src/devfs/$(am__dirstamp)
src/devfs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/devfs/$(DEPDIR)
	@: > src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devfs_init.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devfs_eval.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devfs_mknod.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devfs_show.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devfs_node_type.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devopen.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devread.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devwrite.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devclose.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devioctl.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/devfs/devstat.$(OBJEXT): src/devfs/$(am__dirstamp) \
	src/devfs/$(DEPDIR)/$(am__dirstamp)
src/pipe/$(am__dirstamp):
	@$(MKDIR_P) src/pipe
	@: > src/pipe/$(am__dirstamp)
src/pipe/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/pipe/$(DEPDIR)
	@: > src/pipe/$(DEPDIR)/$(am__dirstamp)
src/pipe/fifo.$(OBJEXT): src/pipe/$(am__dirstamp) \
	src/pipe/$(DEPDIR)/$(am__dirstamp)
src/pipe/pipe.$(OBJEXT): src/pipe/$(am__dirstamp) \
	src/pipe/$(DEPDIR)/$(am__dirstamp)
libimfs.a: $(libimfs_a_OBJECTS) $(libimfs_a_DEPENDENCIES) 
	-rm -f libimfs.a
	$(libimfs_a_AR) libimfs.a $(libimfs_a_OBJECTS) $(libimfs_a_LIBADD)
	$(RANLIB) libimfs.a
src/rfs/$(am__dirstamp):
	@$(MKDIR_P) src/rfs
	@: > src/rfs/$(am__dirstamp)
src/rfs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/rfs/$(DEPDIR)
	@: > src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-bitmaps.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-block.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-buffer-bdbuf.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-buffer.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-dir-hash.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-file.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-group.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-inode.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-rtems-dev.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-rtems-utils.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-rtems.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-shell.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-bitmaps-ut.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-dir.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-file-system.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-format.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-link.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-mutex.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-rtems-dir.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-rtems-file.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
src/rfs/rtems-rfs-trace.$(OBJEXT): src/rfs/$(am__dirstamp) \
	src/rfs/$(DEPDIR)/$(am__dirstamp)
librfs.a: $(librfs_a_OBJECTS) $(librfs_a_DEPENDENCIES) 
	-rm -f librfs.a
	$(librfs_a_AR) librfs.a $(librfs_a_OBJECTS) $(librfs_a_LIBADD)
	$(RANLIB) librfs.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/devfs/devclose.$(OBJEXT)
	-rm -f src/devfs/devfs_eval.$(OBJEXT)
	-rm -f src/devfs/devfs_init.$(OBJEXT)
	-rm -f src/devfs/devfs_mknod.$(OBJEXT)
	-rm -f src/devfs/devfs_node_type.$(OBJEXT)
	-rm -f src/devfs/devfs_show.$(OBJEXT)
	-rm -f src/devfs/devioctl.$(OBJEXT)
	-rm -f src/devfs/devopen.$(OBJEXT)
	-rm -f src/devfs/devread.$(OBJEXT)
	-rm -f src/devfs/devstat.$(OBJEXT)
	-rm -f src/devfs/devwrite.$(OBJEXT)
	-rm -f src/dosfs/fat.$(OBJEXT)
	-rm -f src/dosfs/fat_fat_operations.$(OBJEXT)
	-rm -f src/dosfs/fat_file.$(OBJEXT)
	-rm -f src/dosfs/msdos_conv.$(OBJEXT)
	-rm -f src/dosfs/msdos_create.$(OBJEXT)
	-rm -f src/dosfs/msdos_dir.$(OBJEXT)
	-rm -f src/dosfs/msdos_eval.$(OBJEXT)
	-rm -f src/dosfs/msdos_file.$(OBJEXT)
	-rm -f src/dosfs/msdos_format.$(OBJEXT)
	-rm -f src/dosfs/msdos_free.$(OBJEXT)
	-rm -f src/dosfs/msdos_fsunmount.$(OBJEXT)
	-rm -f src/dosfs/msdos_handlers_dir.$(OBJEXT)
	-rm -f src/dosfs/msdos_handlers_file.$(OBJEXT)
	-rm -f src/dosfs/msdos_init.$(OBJEXT)
	-rm -f src/dosfs/msdos_initsupp.$(OBJEXT)
	-rm -f src/dosfs/msdos_misc.$(OBJEXT)
	-rm -f src/dosfs/msdos_mknod.$(OBJEXT)
	-rm -f src/dosfs/msdos_node_type.$(OBJEXT)
	-rm -f src/dosfs/msdos_rename.$(OBJEXT)
	-rm -f src/imfs/deviceerrno.$(OBJEXT)
	-rm -f src/imfs/deviceio.$(OBJEXT)
	-rm -f src/imfs/imfs_chown.$(OBJEXT)
	-rm -f src/imfs/imfs_config.$(OBJEXT)
	-rm -f src/imfs/imfs_creat.$(OBJEXT)
	-rm -f src/imfs/imfs_debug.$(OBJEXT)
	-rm -f src/imfs/imfs_directory.$(OBJEXT)
	-rm -f src/imfs/imfs_eval.$(OBJEXT)
	-rm -f src/imfs/imfs_fchmod.$(OBJEXT)
	-rm -f src/imfs/imfs_fcntl.$(OBJEXT)
	-rm -f src/imfs/imfs_fdatasync.$(OBJEXT)
	-rm -f src/imfs/imfs_fifo.$(OBJEXT)
	-rm -f src/imfs/imfs_free.$(OBJEXT)
	-rm -f src/imfs/imfs_fsunmount.$(OBJEXT)
	-rm -f src/imfs/imfs_getchild.$(OBJEXT)
	-rm -f src/imfs/imfs_gtkn.$(OBJEXT)
	-rm -f src/imfs/imfs_handlers_device.$(OBJEXT)
	-rm -f src/imfs/imfs_handlers_directory.$(OBJEXT)
	-rm -f src/imfs/imfs_handlers_link.$(OBJEXT)
	-rm -f src/imfs/imfs_handlers_memfile.$(OBJEXT)
	-rm -f src/imfs/imfs_init.$(OBJEXT)
	-rm -f src/imfs/imfs_initsupp.$(OBJEXT)
	-rm -f src/imfs/imfs_link.$(OBJEXT)
	-rm -f src/imfs/imfs_load_tar.$(OBJEXT)
	-rm -f src/imfs/imfs_mknod.$(OBJEXT)
	-rm -f src/imfs/imfs_mount.$(OBJEXT)
	-rm -f src/imfs/imfs_ntype.$(OBJEXT)
	-rm -f src/imfs/imfs_readlink.$(OBJEXT)
	-rm -f src/imfs/imfs_rename.$(OBJEXT)
	-rm -f src/imfs/imfs_rmnod.$(OBJEXT)
	-rm -f src/imfs/imfs_stat.$(OBJEXT)
	-rm -f src/imfs/imfs_symlink.$(OBJEXT)
	-rm -f src/imfs/imfs_unlink.$(OBJEXT)
	-rm -f src/imfs/imfs_unmount.$(OBJEXT)
	-rm -f src/imfs/imfs_utime.$(OBJEXT)
	-rm -f src/imfs/ioman.$(OBJEXT)
	-rm -f src/imfs/memfile.$(OBJEXT)
	-rm -f src/imfs/miniimfs_init.$(OBJEXT)
	-rm -f src/pipe/fifo.$(OBJEXT)
	-rm -f src/pipe/pipe.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-bitmaps-ut.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-bitmaps.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-block.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-buffer-bdbuf.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-buffer.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-dir-hash.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-dir.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-file-system.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-file.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-format.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-group.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-inode.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-link.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-mutex.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-rtems-dev.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-rtems-dir.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-rtems-file.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-rtems-utils.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-rtems.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-shell.$(OBJEXT)
	-rm -f src/rfs/rtems-rfs-trace.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include src/devfs/$(DEPDIR)/devclose.Po
include src/devfs/$(DEPDIR)/devfs_eval.Po
include src/devfs/$(DEPDIR)/devfs_init.Po
include src/devfs/$(DEPDIR)/devfs_mknod.Po
include src/devfs/$(DEPDIR)/devfs_node_type.Po
include src/devfs/$(DEPDIR)/devfs_show.Po
include src/devfs/$(DEPDIR)/devioctl.Po
include src/devfs/$(DEPDIR)/devopen.Po
include src/devfs/$(DEPDIR)/devread.Po
include src/devfs/$(DEPDIR)/devstat.Po
include src/devfs/$(DEPDIR)/devwrite.Po
include src/dosfs/$(DEPDIR)/fat.Po
include src/dosfs/$(DEPDIR)/fat_fat_operations.Po
include src/dosfs/$(DEPDIR)/fat_file.Po
include src/dosfs/$(DEPDIR)/msdos_conv.Po
include src/dosfs/$(DEPDIR)/msdos_create.Po
include src/dosfs/$(DEPDIR)/msdos_dir.Po
include src/dosfs/$(DEPDIR)/msdos_eval.Po
include src/dosfs/$(DEPDIR)/msdos_file.Po
include src/dosfs/$(DEPDIR)/msdos_format.Po
include src/dosfs/$(DEPDIR)/msdos_free.Po
include src/dosfs/$(DEPDIR)/msdos_fsunmount.Po
include src/dosfs/$(DEPDIR)/msdos_handlers_dir.Po
include src/dosfs/$(DEPDIR)/msdos_handlers_file.Po
include src/dosfs/$(DEPDIR)/msdos_init.Po
include src/dosfs/$(DEPDIR)/msdos_initsupp.Po
include src/dosfs/$(DEPDIR)/msdos_misc.Po
include src/dosfs/$(DEPDIR)/msdos_mknod.Po
include src/dosfs/$(DEPDIR)/msdos_node_type.Po
include src/dosfs/$(DEPDIR)/msdos_rename.Po
include src/imfs/$(DEPDIR)/deviceerrno.Po
include src/imfs/$(DEPDIR)/deviceio.Po
include src/imfs/$(DEPDIR)/imfs_chown.Po
include src/imfs/$(DEPDIR)/imfs_config.Po
include src/imfs/$(DEPDIR)/imfs_creat.Po
include src/imfs/$(DEPDIR)/imfs_debug.Po
include src/imfs/$(DEPDIR)/imfs_directory.Po
include src/imfs/$(DEPDIR)/imfs_eval.Po
include src/imfs/$(DEPDIR)/imfs_fchmod.Po
include src/imfs/$(DEPDIR)/imfs_fcntl.Po
include src/imfs/$(DEPDIR)/imfs_fdatasync.Po
include src/imfs/$(DEPDIR)/imfs_fifo.Po
include src/imfs/$(DEPDIR)/imfs_free.Po
include src/imfs/$(DEPDIR)/imfs_fsunmount.Po
include src/imfs/$(DEPDIR)/imfs_getchild.Po
include src/imfs/$(DEPDIR)/imfs_gtkn.Po
include src/imfs/$(DEPDIR)/imfs_handlers_device.Po
include src/imfs/$(DEPDIR)/imfs_handlers_directory.Po
include src/imfs/$(DEPDIR)/imfs_handlers_link.Po
include src/imfs/$(DEPDIR)/imfs_handlers_memfile.Po
include src/imfs/$(DEPDIR)/imfs_init.Po
include src/imfs/$(DEPDIR)/imfs_initsupp.Po
include src/imfs/$(DEPDIR)/imfs_link.Po
include src/imfs/$(DEPDIR)/imfs_load_tar.Po
include src/imfs/$(DEPDIR)/imfs_mknod.Po
include src/imfs/$(DEPDIR)/imfs_mount.Po
include src/imfs/$(DEPDIR)/imfs_ntype.Po
include src/imfs/$(DEPDIR)/imfs_readlink.Po
include src/imfs/$(DEPDIR)/imfs_rename.Po
include src/imfs/$(DEPDIR)/imfs_rmnod.Po
include src/imfs/$(DEPDIR)/imfs_stat.Po
include src/imfs/$(DEPDIR)/imfs_symlink.Po
include src/imfs/$(DEPDIR)/imfs_unlink.Po
include src/imfs/$(DEPDIR)/imfs_unmount.Po
include src/imfs/$(DEPDIR)/imfs_utime.Po
include src/imfs/$(DEPDIR)/ioman.Po
include src/imfs/$(DEPDIR)/memfile.Po
include src/imfs/$(DEPDIR)/miniimfs_init.Po
include src/pipe/$(DEPDIR)/fifo.Po
include src/pipe/$(DEPDIR)/pipe.Po
include src/rfs/$(DEPDIR)/rtems-rfs-bitmaps-ut.Po
include src/rfs/$(DEPDIR)/rtems-rfs-bitmaps.Po
include src/rfs/$(DEPDIR)/rtems-rfs-block.Po
include src/rfs/$(DEPDIR)/rtems-rfs-buffer-bdbuf.Po
include src/rfs/$(DEPDIR)/rtems-rfs-buffer.Po
include src/rfs/$(DEPDIR)/rtems-rfs-dir-hash.Po
include src/rfs/$(DEPDIR)/rtems-rfs-dir.Po
include src/rfs/$(DEPDIR)/rtems-rfs-file-system.Po
include src/rfs/$(DEPDIR)/rtems-rfs-file.Po
include src/rfs/$(DEPDIR)/rtems-rfs-format.Po
include src/rfs/$(DEPDIR)/rtems-rfs-group.Po
include src/rfs/$(DEPDIR)/rtems-rfs-inode.Po
include src/rfs/$(DEPDIR)/rtems-rfs-link.Po
include src/rfs/$(DEPDIR)/rtems-rfs-mutex.Po
include src/rfs/$(DEPDIR)/rtems-rfs-rtems-dev.Po
include src/rfs/$(DEPDIR)/rtems-rfs-rtems-dir.Po
include src/rfs/$(DEPDIR)/rtems-rfs-rtems-file.Po
include src/rfs/$(DEPDIR)/rtems-rfs-rtems-utils.Po
include src/rfs/$(DEPDIR)/rtems-rfs-rtems.Po
include src/rfs/$(DEPDIR)/rtems-rfs-shell.Po
include src/rfs/$(DEPDIR)/rtems-rfs-trace.Po

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/devfs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/devfs/$(am__dirstamp)
	-rm -f src/dosfs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/dosfs/$(am__dirstamp)
	-rm -f src/imfs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/imfs/$(am__dirstamp)
	-rm -f src/pipe/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/pipe/$(am__dirstamp)
	-rm -f src/rfs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/rfs/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf src/devfs/$(DEPDIR) src/dosfs/$(DEPDIR) src/imfs/$(DEPDIR) src/pipe/$(DEPDIR) src/rfs/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf src/devfs/$(DEPDIR) src/dosfs/$(DEPDIR) src/imfs/$(DEPDIR) src/pipe/$(DEPDIR) src/rfs/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


# Multilib support rules
.PHONY: all-multi install-multi mostlyclean-multi clean-multi distclean-multi \
	maintainer-clean-multi

#all-recursive: all-multi
#install-recursive: install-multi

#mostlyclean-recursive: mostlyclean-multi
#clean-recursive: clean-multi
#distclean-recursive: distclean-multi
#maintainer-clean-recursive: maintainer-clean-multi

#all-multi:
#	$(MULTIDO) $(AM_MAKEFLAGS) DO=all multi-do
#install-multi:
#	$(MULTIDO) $(AM_MAKEFLAGS) DO=install multi-do

#mostlyclean-multi:
#	$(MULTICLEAN) $(AM_MAKEFLAGS) DO=mostlyclean multi-clean
#clean-multi:
#	$(MULTICLEAN) $(AM_MAKEFLAGS) DO=clean multi-clean
#distclean-multi:
#	$(MULTICLEAN) $(AM_MAKEFLAGS) DO=distclean multi-clean
#maintainer-clean-multi:
#	$(MULTICLEAN) $(AM_MAKEFLAGS) DO=maintainer-clean multi-clean

#$(srcdir)/preinstall.am: Makefile.am
#	$(AMPOLISH3) $(srcdir)/Makefile.am > $(srcdir)/preinstall.am

preinstall-am: $(PREINSTALL_FILES)
preinstall: preinstall-am
.PHONY: preinstall preinstall-am

# ---

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
